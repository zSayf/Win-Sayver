# Win Sayver - Comprehensive .gitignore
# =====================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# =================================
# Win Sayver Specific Exclusions
# =================================

# API Keys and Sensitive Configuration (CRITICAL SECURITY)
*.key
api_key.txt
.api_key
api_keys.json
.env.local
.env.production
config.ini
settings.ini
credentials.json
.credentials

# Encrypted Configuration Files
.security_key
.encrypted_config
*.enc
*.encrypted
security/
keys/

# System Analysis Data
system_specs.json
system_analysis_*.json
specs_*.json
analysis_results/
temp_analysis/

# Application Data Directories
AppData/
LocalAppData/
config/
cache/
logs/
temp/
tmp/

# Database Files
*.db
*.sqlite
*.sqlite3
system_specs.db
analysis_history.db

# Log Files
*.log
logs/
win_sayver.log
error.log
debug.log
application.log

# Temporary Files
temp/
tmp/
*.tmp
*.temp
~*
.DS_Store
Thumbs.db

# IDE and Editor Files
.vscode/
.idea/
*.swp
*.swo
*~
.sublime-*

# OS Generated Files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# Windows Specific
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp

# PyQt6 Specific
*.qrc
*.ui~
ui_*.py

# Build and Package Artifacts
build/
dist/
*.exe
*.msi
*.dmg
*.pkg
*.deb
*.rpm

# Screenshot and Image Cache
screenshots/
image_cache/
*.png.cache
*.jpg.cache

# Backup Files
*.bak
*.backup
*~

# =================================
# Development and Testing
# =================================

# Test artifacts
test_output/
test_results/
.pytest_cache/
htmlcov/

# Coverage reports
.coverage
coverage.xml
*.cover

# Profiling data
*.prof

# Virtual environments
venv*/
env*/
.venv*/

# Local development overrides
local_settings.py
local_config.py
dev_settings.py

# Documentation builds
docs/_build/
docs/build/

# =================================
# NEVER COMMIT THESE (SECURITY)
# =================================
# Add additional patterns for any sensitive data specific to Win Sayver

# Google API credentials
google_credentials.json
service_account.json

# Any file containing "secret", "password", or "token"
*secret*
*password*
*token*
*private*

# Encrypted backup files
*.gpg
*.pgp